spring.application.name=bhgoods

# ======================= DATASOURCE (PostgreSQL) =======================
# Use variáveis de ambiente para usuário e senha (ex: DB_USER, DB_PASSWORD)
spring.datasource.url=jdbc:postgresql://localhost:5432/bhgoods
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool (Hikari) - ajuste conforme carga
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000

# ======================= JPA / HIBERNATE ===============================
# Em desenvolvimento pode usar update; em produção preferir validate + migrações (Flyway)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# ======================= TIMEZONE ======================================
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jackson.time-zone=UTC
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false

# ======================= JWT ===========================================
# Gere um segredo BASE64 (256 bits para HS256). Exemplo PowerShell:
# [Convert]::ToBase64String((New-Object byte[] 32 | % { (Get-Random -Max 256) }))
# NÃO versionar segredos reais. Use variável de ambiente JWT_SECRET_BASE64.
# Propriedades mapeadas em JwtProperties (prefixo app.jwt)
app.jwt.secret-base64=${JWT_SECRET_BASE64:CHANGE_ME_BASE64}
app.jwt.expiration-ms=${JWT_EXPIRATION_MS:14400000} # 4 horas

# ======================= LOGGING =======================================
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# ======================= PROFILES ======================================
# Defina spring.profiles.active=dev via env em vez de fixar aqui

